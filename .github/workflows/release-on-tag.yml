name: Build & Release on Tag

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Існуючий тег (vX.Y.Z). Якщо порожньо — візьме останній."
        required: false

permissions:
  contents: write

jobs:
  build_and_release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install --upgrade nuitka ordered-set zstandard
          python -m nuitka --version
      
      - name: Build (Nuitka onefile)
        shell: powershell
        run: |
          Remove-Item dist,build -Recurse -Force -ErrorAction SilentlyContinue
          python -m nuitka SteamAchievementLocalizer.py --onefile `
            --remove-output `
            --output-dir=dist `
            --windows-console-mode=disable `
            --plugin-enable=pyqt6 `
            --windows-icon-from-ico=assets/icon.ico `
            --include-data-files=assets/icon.ico=assets/icon.ico `
            --include-data-files=assets/locales/lang_en.json=assets/locales/lang_en.json `
            --include-data-files=assets/locales/lang_ua.json=assets/locales/lang_ua.json `
            --include-data-files=assets/locales/lang_pl.json=assets/locales/lang_pl.json `
            --assume-yes-for-downloads `
            --show-progress

      - name: Debug list files
        shell: bash
        run: |
          echo "Root:"
          ls -al
          echo "dist/:"
          ls -al dist || true
          echo "Find any exe:"
          find dist -maxdepth 2 -type f -iname "*.exe" -printf "%P\n" || true

      - name: Locate artifact
        id: artifact
        shell: bash
        run: |
          set -e
          FILE=$(find dist -maxdepth 1 -type f -iname "SteamAchievementLocalizer*.exe" -printf "%P\n" | head -n1 || true)
          if [ -z "$FILE" ]; then
            echo "No exe built"
            ls -al dist || true
            exit 1
          fi
          echo "file=dist/$FILE" >> "$GITHUB_OUTPUT"
          echo "Using artifact: dist/$FILE"

      - name: Upload artifact (CI record)
        uses: actions/upload-artifact@v4
        with:
          name: SteamAchievementLocalizer-${{ github.ref_name }}-win64
          path: ${{ steps.artifact.outputs.file }}

      - name: Extract version from source
        id: ver
        shell: bash
        run: |
          set -e
          ver=$(grep -Eo 'APP_VERSION *= *"[0-9]+\.[0-9]+\.[0-9]+"' SteamAchievementLocalizer.py | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')
          echo "app_version=$ver" >> $GITHUB_OUTPUT
          echo "Detected version $ver"

      - name: Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          TAG="${GITHUB_REF_NAME}"
          gh release create "$TAG" "${{ steps.artifact.outputs.file }}" \
            --title "SteamAchievementLocalizer $TAG" \
            --generate-notes
