name: Build & Release after Bump

on:
  workflow_run:
    workflows: ["Bump & Tag Version"]
    types: [completed]

permissions:
  contents: write

jobs:
  build_and_release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --tags --force

      - name: Determine latest tag
        id: tag
        shell: bash
        run: |
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [ -z "$TAG" ]; then
            echo "No tags found"
            exit 1
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Using tag $TAG"
          # Checkout саме тег
          git checkout "$TAG"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka

      - name: Build (Nuitka)
        run: |
          nuitka SteamAchievementLocalizer.py --onefile --windows-console-mode=disable --plugin-enable=pyqt6 --windows-icon-from-ico=assets/icon.ico ^
            --include-data-files=assets/icon.ico=assets/icon.ico ^
            --include-data-files=assets/locales/lang_en.json=assets/locales/lang_en.json ^
            --include-data-files=assets/locales/lang_ua.json=assets/locales/lang_ua.json ^
            --include-data-files=assets/locales/lang_pl.json=assets/locales/lang_pl.json

      - name: Locate artifact
        id: artifact
        shell: bash
        run: |
          FILE=$(ls -1 *.exe 2>/dev/null || ls -1 dist/*.exe 2>/dev/null || true)
          if [ -z "$FILE" ]; then
            echo "No exe built"
            exit 1
          fi
          echo "file=$FILE" >> $GITHUB_OUTPUT
          echo "Artifact: $FILE"

      - name: Upload artifact (CI record)
        uses: actions/upload-artifact@v4
        with:
          name: SteamAchievementLocalizer-${{ steps.tag.outputs.tag }}-win64
          path: ${{ steps.artifact.outputs.file }}

      - name: Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ steps.tag.outputs.tag }}" "${{ steps.artifact.outputs.file }}" \
            --title "SteamAchievementLocalizer ${{ steps.tag.outputs.tag }}" \
            --generate-notes
